package Sample;

import java.awt.BorderLayout;
import java.awt.Component;
import java.awt.Dimension;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Map;
import javax.swing.BorderFactory;
import javax.swing.BoxLayout;
import javax.swing.JButton;
import javax.swing.JColorChooser;
import javax.swing.JComboBox;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JList;
import javax.swing.JMenu;
import javax.swing.JMenuBar;
import javax.swing.JMenuItem;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTextField;
import javax.swing.border.EmptyBorder;

public class MapLocator extends JFrame {
    Boolean unsavednew = Boolean.valueOf(false);
    Boolean unsaved = Boolean.valueOf(false);
    PicturePanel pp = null;
    JFileChooser jfc = new JFileChooser(".");
    String[] message = new String[]{"Described Place", "Named Place"};
    int x;
    int y;
    Category cate;
    NamedPlace np;
    DescribedPlace dp;
    private JMenuBar menuBar;
    private JMenu archive;
    private JMenuItem menuNew;
    private JMenuItem menuOpen;
    private JMenuItem menuSave;
    private JMenuItem menuExit;
    private JComboBox options;
    private JButton search;
    private JButton hidepl;
    private JButton deletepl;
    private JButton whatis;
    private JButton hideca;
    private JButton newca;
    private JButton deleteca;
    private JLabel comboLabel;
    private JLabel invinsiblespace;
    private JLabel categories;
    private JLabel hiddenLabel;
    private JLabel hiddenLabel2;
    private JTextField searchField;
    private JTextField nameField;
    private JPanel panel;
    private JPanel east;
    private JPanel north;
    private JPanel eastBox;
    JColorChooser jcc;
    Map<Position, Place> where = new HashMap();
    CategoryListModel dataModel = new CategoryListModel();
    ArrayList<Category> catList = new ArrayList();
    JList<String> category;
    NamedPlaceListener namedLyss;
    DescribedPlaceListener describedLyss;

    MapLocator() {
        super("Map Locator");
        this.category = new JList(this.dataModel);
        this.namedLyss = new NamedPlaceListener(this);
        this.describedLyss = new DescribedPlaceListener(this);
        this.menuBar = new JMenuBar();
        this.setJMenuBar(this.menuBar);
        this.archive = new JMenu("Archive");
        this.menuBar.add(this.archive);
        this.menuNew = new JMenuItem("New map");
        this.archive.add(this.menuNew);
        this.menuNew.addActionListener(new NewAction(this));
        this.menuOpen = new JMenuItem("Open");
        this.archive.add(this.menuOpen);
        this.menuOpen.addActionListener(new OpenAction(this));
        this.menuSave = new JMenuItem("Save");
        this.archive.add(this.menuSave);
        this.menuSave.addActionListener(new SaveButtonAction(this));
        this.menuExit = new JMenuItem("Exit");
        this.archive.add(this.menuExit);
        this.menuExit.addActionListener(new ExitAction(this));
        this.north = new JPanel();
        this.add(this.north, "North");
        this.comboLabel = new JLabel("          New:   ");
        this.options = new JComboBox(this.message);
        this.options.addActionListener(new MouseListener(this));
        this.north.add(this.comboLabel);
        this.north.add(this.options);
        this.searchField = new JTextField("Search...     ");
        this.searchField.setColumns(15);
        this.searchField.addMouseListener(new SearchTextAction(this));
        this.north.add(this.searchField);
        this.invinsiblespace = new JLabel();
        this.invinsiblespace.setBorder(BorderFactory.createEmptyBorder(0, 0, 0, 0));
        this.north.add(this.invinsiblespace);
        this.search = new JButton("     Search     ");
        this.north.add(this.search);
        this.hidepl = new JButton("     Hide places     ");
        this.hidepl.addActionListener(new HidePlace(this));
        this.north.add(this.hidepl);
        this.deletepl = new JButton("     Delete places     ");
        this.deletepl.addActionListener(new DeletePlacesListener(this));
        this.north.add(this.deletepl);
        this.whatis = new JButton("     What is here?     ");
        this.north.add(this.whatis);
        JLabel emptyLabel = new JLabel();
        emptyLabel.setText("");
        emptyLabel.setBorder(new EmptyBorder(5, 100, 5, 0));
        this.north.add(emptyLabel);
        JLabel emptyLabel2 = new JLabel();
        emptyLabel2.setText("");
        emptyLabel2.setBorder(new EmptyBorder(5, 100, 5, 0));
        this.north.add(emptyLabel2);
        this.east = new JPanel();
        this.east.setLayout(new BoxLayout(this.east, 1));
        this.add(this.east);
        this.categories = new JLabel("Categories:");
        this.east.add(this.categories);
        this.category = new JList(this.dataModel);
        this.category.setVisibleRowCount(5);
        this.category.setFixedCellWidth(80);
        this.category.setLayoutOrientation(0);
        this.category.setSelectionMode(0);
        JScrollPane listScroller = new JScrollPane(this.category);
        listScroller.setMaximumSize(new Dimension(300, 250));
        this.east.add(listScroller);
        this.hideca = new JButton("Hide category");
        this.east.add(this.hideca);
        this.hideca.addActionListener(new HideCategoryListener(this));
        this.hiddenLabel = new JLabel();
        this.east.add(this.hiddenLabel);
        this.newca = new JButton("New category");
        this.east.add(this.newca);
        this.newca.addActionListener(new CategoryListener(this));
        this.deleteca = new JButton("Delete category");
        this.deleteca.addActionListener(new DeleteCategoryListener(this));
        this.east.add(this.deleteca);
        this.eastBox = new JPanel();
        this.eastBox.setLayout(new BorderLayout());
        this.add(this.eastBox, "East");
        this.eastBox.add(this.east);
        this.setLocationRelativeTo((Component)null);
        this.pack();
        this.setVisible(true);
        this.setDefaultCloseOperation(0);
        this.addWindowListener(new SaveAction(this));
        this.repaint();
        this.validate();
    }
}

